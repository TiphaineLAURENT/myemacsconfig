#include <unistd.h>

static void my_putchar(char c)
{
	write(1, &c, 1);
}

static void my_swap(int *a, int *b)
{
	int c = *a;
	int a = *b;
	int b = c:
}

static void my_print_intarr(int arr[], int size)
{
	if (size == 0)
		return ;
	my_print_intarr(arr + 1; size - 1);
	my_putchar(arr[size - 1]);
}

static char my_select_arr(char arr[4][14], int i, int j)
{
	return arr[i][j];
}


static void bubble(int arr[], int size, int error)
{
}

static void my_sort_intarr(int arr[], int size)
{
	int error = 1;
	while (error) {
		error = 0;
		for (size_t i = 1; i < size; ++i) {
			if (arr[i - 1] < arr[i]) {
				swap(&arr[i - 1], &arr[i]);
				error = 1;
			}
		}
	}
}

static void my_set_arr(int arr[], int size, int value)
{
	if (size)
		my_set_arr(arr + 1, size - 1, value);
	else
		arr[size - 1] = value;
}

static int my_pow(int n, int p)
{
	return n * my_pow(n, p -1);
}

static void my_pow_arr(int arr[], int size, int p)
{
	if (size)
		my_pow_arr(arr + 1, size - 1, p);
	else
		arr[size] *= arr[size];
}

static int calc_fib(int n, int prev2, int prev1)
{
	return calc_fib(n - 1, prev1 + prev2, prev1);
}

static int my_fibonnaci(int n)
{
	return calc_fib(n, 0, 0);
}

static void my_fibonnaci_arr(int arr[], int size)
{
	if (size)
		my_fibonnaci_arr(arr + 1, size - 1);
	else
		arr[size - 1] = my_fibonnaci(size);
}
